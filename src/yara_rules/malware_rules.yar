/*
    Basic YARA rules for malware detection
    These rules detect common malware patterns and behaviors
*/

rule WindowsExecutableWithHighEntropy {
    meta:
        description = "Windows executable with abnormally high entropy (possible packed/encrypted)"
        severity = "medium"
    
    condition:
        uint16(0) == 0x5A4D // MZ header
}

rule SuspiciousPowerShellCommands {
    meta:
        description = "Detects suspicious PowerShell command patterns"
        severity = "high"
    
    strings:
        $encoded_cmd1 = /-e[\s]+[A-Za-z0-9+\/]{50,}/ nocase
        $encoded_cmd2 = /-enc[\s]+[A-Za-z0-9+\/]{50,}/ nocase
        $encoded_cmd3 = /-encodedcommand[\s]+[A-Za-z0-9+\/]{50,}/ nocase
        $bypass1 = /-ExecutionPolicy bypass/ nocase
        $bypass2 = /-Exec bypass/ nocase
        $hidden = /-windowstyle hidden/ nocase
        $noprofile = /-noprofile/ nocase
        $download_cradle1 = /iex[\s]*\([\s]*New-Object[\s]*Net\.WebClient[\s]*\)\./ nocase
        $download_cradle2 = /iex[\s]*\([\s]*iwr[\s]*/ nocase
        $download_cradle3 = /wget[\s]*http/ nocase
        $download_cradle4 = /curl[\s]*http/ nocase
        
    condition:
        any of ($encoded_cmd*) or
        ($hidden and $bypass1) or
        ($hidden and $bypass2) or
        ($noprofile and $hidden) or
        any of ($download_cradle*)
}

rule SuspiciousScriptObfuscation {
    meta:
        description = "Detects common script obfuscation techniques"
        severity = "medium"
    
    strings:
        $chr_concat = /chr[\s]*\([\s]*\d+[\s]*\)[\s]*&[\s]*chr[\s]*\([\s]*\d+/ nocase
        $chr_array = /chr[\s]*\([\s]*\d+[\s]*\)[\s]*\+[\s]*chr[\s]*\([\s]*\d+/ nocase
        $char_code = /String\.fromCharCode[\s]*\([\s]*\d+/ nocase
        $eval_concat = /eval[\s]*\([\s]*[\"\']\w+[\s]*\+[\s]*\w+/ nocase
        $large_array = /\[[^\]]{1000,}\]/ nocase
        $reversed = /esrever.\)/ nocase
        $concat_many = /\"[\s]*\+[\s]*\"[\s]*\+[\s]*\"[\s]*\+[\s]*\"[\s]*\+/
        
    condition:
        3 of them
}

rule Ransomware_Indicators {
    meta:
        description = "Detects strings commonly found in ransomware"
        severity = "critical"
    
    strings:
        $bitcoin = /bitcoin|BTC wallet|BTC address|cryptocurrency|blockchain\.info|bitpay/i
        $ransom1 = /your files have been encrypted|your files are locked|files are encrypted|recover your files/i
        $ransom2 = /pay the ransom|send us|payment in bitcoin|buy decryption key|decryption software/i
        $ransom3 = /encrypted with|decryption tool|recover your data|recovery tool/i
        $delete1 = /files will be deleted|data will be lost|files will be lost forever/i
        $extension1 = /\.locked|\.crypt|\.encrypted|\.encoderpass|\.crypted|\.crypto/i
        $time = /hours left|time left|timer|countdown/i
        $command1 = /vssadmin delete shadows/i
        $command2 = /bcdedit.*recoveryenabled no/i
        $command3 = /wbadmin delete.*backup/i
        
    condition:
        ($bitcoin and $ransom1) or
        ($bitcoin and $ransom2) or
        ($ransom1 and $ransom3) or
        ($extension1 and $ransom2) or
        ($command1 and $command2) or
        ($time and $delete1) or
        (($ransom1 or $ransom2) and ($command1 or $command3))
}

rule Cobalt_Strike_Beacon {
    meta:
        description = "Detects Cobalt Strike beacon characteristics"
        severity = "critical"
    
    strings:
        $a1 = "%s (admin)" fullword
        $a2 = "could not run %s as %s\\%s: %d" fullword
        $a3 = "Started service %s on %s" fullword
        $a4 = "%s as %s\\%s: %d" fullword
        $a5 = "%s on %s:% failed." fullword
        $a6 = "%s on %s:% success." fullword
        $a7 = "failed to create remote service %s: %d" fullword
        $a8 = "Failed to open service control manager on %s: %d" fullword
        $a9 = "Error while monitoring directory: %s" fullword
        $a10 = "Downloaded %s to %s" fullword
        $a11 = "Uploaded %s as %s : %d of %d bytes" fullword
                
    condition:
        5 of ($a*)
}

rule Trojan_Generic_Behavior {
    meta:
        description = "Generic behaviors associated with trojans"
        severity = "high"
    
    strings:
        $startup1 = /HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run/i
        $startup2 = /HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run/i
        $startup3 = /HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce/i
        $startup4 = "\\Startup\\"
        $backdoor1 = /CreateService|OpenSCManager/
        $backdoor2 = "WScript.Shell"
        $backdoor3 = "ShellExecute"
        $backdoor4 = "popen"
        $backdoor5 = "cmd.exe /c"
        $keylogger1 = "SetWindowsHookEx"
        $keylogger2 = "GetAsyncKeyState"
        $inject1 = "VirtualAllocEx"
        $inject2 = "WriteProcessMemory"
        $inject3 = "CreateRemoteThread"
        $mutex = /CreateMutex|OpenMutex/
        $antivm1 = "vmware"
        $antivm2 = "VirtualBox"
        $antivm3 = "VBOX"
        $antivm4 = "vmtools"
        $antivm5 = "qemu"
        $antisec1 = "avp.exe"
        $antisec2 = "msmpeng.exe"
        $antisec3 = "taskkill"
        
    condition:
        (any of ($startup*)) and 
        ((any of ($backdoor*)) or
         (any of ($keylogger*)) or
         (any of ($inject*))) and
        ($mutex) and
        ((any of ($antivm*)) or (any of ($antisec*)))
}

rule Suspicious_Document_Macro {
    meta:
        description = "Detects suspicious macros in Office documents"
        severity = "medium"
    
    strings:
        $auto_open = "AutoOpen" nocase
        $auto_close = "AutoClose" nocase
        $auto_exit = "AutoExit" nocase
        $document_open = "Document_Open" nocase
        $workbook_open = "Workbook_Open" nocase
        $shell = "Shell" nocase
        $vba_project = "VBA PROJECT" 
        $create_object = "CreateObject" nocase
        $wscript = "WScript.Shell" nocase
        $shell_execute = "Shell" nocase
        $powershell = "powershell" nocase
        $download = "DownloadFile" nocase
        $http_request = "MSXML2.XMLHTTP" nocase
        $hidden_sheets = ".Visible = False" nocase
        $exec = ".Exec" nocase
        
    condition:
        ($vba_project) and 
        (any of ($auto_*) or $document_open or $workbook_open) and
        (($shell or $create_object or $wscript or $shell_execute) and
         ($powershell or $download or $http_request or $exec or $hidden_sheets))
}

rule Webshell_Generic {
    meta:
        description = "Generic detection for web shells"
        severity = "high"
        
    strings:
        $function1 = "eval(" nocase
        $function2 = "exec(" nocase
        $function3 = "shell_exec(" nocase
        $function4 = "passthru(" nocase
        $function5 = "system(" nocase
        $function6 = "assert(" nocase
        $function7 = "preg_replace" nocase
        $function8 = "execute(" nocase
        $function9 = "call_user_func" nocase
        $function10 = "proc_open" nocase
        $function11 = "popen(" nocase
        
        $parameter1 = "$_GET" nocase
        $parameter2 = "$_POST" nocase
        $parameter3 = "$_REQUEST" nocase
        $parameter4 = "$_SERVER" nocase
        $parameter5 = "$_COOKIE" nocase
        
        $suspicious1 = "upload" nocase
        $suspicious2 = "password" nocase
        $suspicious3 = "base64_decode(" nocase
        $suspicious4 = "cmd" nocase
        $suspicious5 = "eval(base64_decode" nocase
        $suspicious6 = "<title>Shell</title>" nocase
        $suspicious7 = "passw" nocase
        $suspicious8 = "chmod(" nocase
        
    condition:
        (2 of ($function*)) and (1 of ($parameter*)) and (2 of ($suspicious*))
}

rule Maldoc_OLE_Objects {
    meta:
        description = "Detects suspicious OLE objects in documents"
        severity = "medium"
        
    strings:
        $ole_marker = { D0 CF 11 E0 A1 B1 1A E1 }
        $equation_editor = "Equation.3" 
        $cv_exploit = "otkloadr" nocase
        $rtf_object = { 5C 6F 62 6A 65 63 74 } // \object in hex
        $ole10native = "Ole10Native" nocase
        $embedded_active = "objdata" nocase
        $excel4macro = "FORMULA"
        
    condition:
        $ole_marker at 0 and 
        1 of ($equation_editor, $cv_exploit, $rtf_object, $ole10native, $embedded_active, $excel4macro)
} 