/*
 * Rootkit Detection Rules
 * These rules focus on detecting rootkits and their components
 */

rule Rootkit_Kernel_Manipulation {
    meta:
        description = "Detects kernel manipulation techniques used by rootkits"
        author = "Security Team"
        severity = "critical"
        date = "2023-10-15"
    
    strings:
        // Kernel structures and objects
        $kernel1 = "SSDT" ascii wide
        $kernel2 = "KeServiceDescriptorTable" ascii wide
        $kernel3 = "KiServiceTable" ascii wide
        $kernel4 = "KeAddSystemServiceTable" ascii wide
        $kernel5 = "PsLoadedModuleList" ascii wide
        $kernel6 = "PsInitialSystemProcess" ascii wide
        $kernel7 = "IoDriverObjectType" ascii wide
        $kernel8 = "ObReferenceObjectByName" ascii wide
        $kernel9 = "KeStackAttachProcess" ascii wide
        $kernel10 = "KeUnstackDetachProcess" ascii wide
        $kernel11 = "PsLookupProcessByProcessId" ascii wide
        $kernel12 = "PsGetCurrentProcess" ascii wide
        $kernel13 = "ZwOpenProcess" ascii wide
        $kernel14 = "ZwOpenThread" ascii wide
        $kernel15 = "MmGetSystemRoutineAddress" ascii wide
        
        // Hooking and patching functions
        $hook1 = "memcpy" ascii wide
        $hook2 = "memmove" ascii wide
        $hook3 = "RtlCopyMemory" ascii wide
        $hook4 = "RtlMoveMemory" ascii wide
        $hook5 = "NtProtectVirtualMemory" ascii wide
        $hook6 = "ZwProtectVirtualMemory" ascii wide
        $hook7 = "VirtualProtect" ascii wide
        $hook8 = "WriteProcessMemory" ascii wide
        $hook9 = "NtWriteVirtualMemory" ascii wide
        $hook10 = "ZwWriteVirtualMemory" ascii wide
        $hook11 = "InterlockedExchange" ascii wide
        $hook12 = "InterlockedCompareExchange" ascii wide
        $hook13 = "RtlFillMemory" ascii wide
        $hook14 = "_PsTable" ascii wide
        $hook15 = "DetourAttach" ascii wide
        
        // Suspicious assembly instructions
        $asm1 = { 8B ?? ?? 89 ?? ?? ?? ?? ?? C7 ?? ?? ?? ?? ?? }  // mov reg, [addr]; mov [addr], reg; mov [addr], imm
        $asm2 = { 68 ?? ?? ?? ?? C3 }                              // push addr; ret (hook)
        $asm3 = { FF 25 ?? ?? ?? ?? }                              // jmp dword ptr [addr]
        $asm4 = { E9 ?? ?? ?? ?? }                                 // jmp rel
        $asm5 = { 68 ?? ?? ?? ?? 9C 60 }                           // push addr; pushfd; pushad
        $asm6 = { 0F 34 }                                          // sysenter
        $asm7 = { 0F 05 }                                          // syscall
        $asm8 = { 0F 01 }                                          // vmcall/vmmcall instructions
        $asm9 = { CD 80 }                                          // int 80h
        
        // Common rootkit strings
        $rootkit1 = "rootkit" nocase ascii wide
        $rootkit2 = "hook" nocase ascii wide
        $rootkit3 = "stealth" nocase ascii wide
        $rootkit4 = "hidden" nocase ascii wide
        $rootkit5 = "cloak" nocase ascii wide
        $rootkit6 = "invisible" nocase ascii wide
        $rootkit7 = "conceal" nocase ascii wide
        $rootkit8 = "masquerade" nocase ascii wide
        $rootkit9 = "undetect" nocase ascii wide
        $rootkit10 = "shadow" nocase ascii wide

    condition:
        (
            (3 of ($kernel*)) or
            (3 of ($hook*)) or
            (2 of ($asm*)) or
            (2 of ($rootkit*) and (1 of ($kernel*) or 1 of ($hook*))) or
            (1 of ($rootkit*) and 2 of ($kernel*) and 1 of ($hook*))
        )
}

rule Rootkit_Process_Hiding {
    meta:
        description = "Detects process hiding techniques used by rootkits"
        author = "Security Team"
        severity = "critical"
        date = "2023-10-15"
    
    strings:
        // Process enumeration APIs
        $proc1 = "NtQuerySystemInformation" ascii wide
        $proc2 = "ZwQuerySystemInformation" ascii wide
        $proc3 = "Process32First" ascii wide
        $proc4 = "Process32Next" ascii wide
        $proc5 = "NtQueryInformationProcess" ascii wide
        $proc6 = "ZwQueryInformationProcess" ascii wide
        $proc7 = "CreateToolhelp32Snapshot" ascii wide
        $proc8 = "SystemProcessInformation" ascii wide
        $proc9 = "ProcessIdToSessionId" ascii wide
        $proc10 = "GetProcessImageFileName" ascii wide
        $proc11 = "QueryFullProcessImageName" ascii wide
        $proc12 = "EnumProcesses" ascii wide
        $proc13 = "EnumProcessModules" ascii wide
        $proc14 = "WTSEnumerateProcesses" ascii wide
        
        // Process list manipulation
        $manip1 = "EPROCESS" ascii wide
        $manip2 = "ActiveProcessLinks" ascii wide
        $manip3 = "Flink" ascii wide
        $manip4 = "Blink" ascii wide
        $manip5 = "LIST_ENTRY" ascii wide
        $manip6 = "ProcessLuid" ascii wide
        $manip7 = "PEB" ascii wide
        $manip8 = "_SYSTEM_PROCESS_INFORMATION" ascii wide
        $manip9 = "PSYSTEM_PROCESS_INFORMATION" ascii wide
        $manip10 = "NextEntryOffset" ascii wide
        $manip11 = "PROCESSENTRY32" ascii wide
        $manip12 = "IMAGE_FILENAME" ascii wide
        $manip13 = "UniqueProcessId" ascii wide
        $manip14 = "InheritedFromUniqueProcessId" ascii wide
        
        // Filtering code patterns
        $filter1 = "strcmp" ascii wide
        $filter2 = "wcscmp" ascii wide
        $filter3 = "stricmp" ascii wide
        $filter4 = "wcsicmp" ascii wide
        $filter5 = "strstr" ascii wide
        $filter6 = "wcsstr" ascii wide
        $filter7 = "strncmp" ascii wide
        $filter8 = "wcsncmp" ascii wide
        $filter9 = "memcmp" ascii wide
        $filter10 = "ProcessName" ascii wide
        $filter11 = "ProcessId" ascii wide
        $filter12 = "if" ascii wide
        $filter13 = "==" ascii wide
        $filter14 = "!=" ascii wide

    condition:
        (
            (3 of ($proc*) and 2 of ($manip*)) or
            (2 of ($proc*) and 3 of ($manip*)) or
            (2 of ($proc*) and 2 of ($manip*) and 2 of ($filter*)) or
            (1 of ($proc*) and 2 of ($manip*) and 3 of ($filter*))
        )
}

rule Rootkit_File_Hiding {
    meta:
        description = "Detects file hiding techniques used by rootkits"
        author = "Security Team"
        severity = "critical"
        date = "2023-10-15"
    
    strings:
        // File enumeration APIs
        $file1 = "NtQueryDirectoryFile" ascii wide
        $file2 = "ZwQueryDirectoryFile" ascii wide
        $file3 = "FindFirstFile" ascii wide
        $file4 = "FindNextFile" ascii wide
        $file5 = "NtEnumerateKey" ascii wide
        $file6 = "ZwEnumerateKey" ascii wide
        $file7 = "NtEnumerateValueKey" ascii wide
        $file8 = "ZwEnumerateValueKey" ascii wide
        $file9 = "ReadDirectoryChangesW" ascii wide
        $file10 = "IRP_MJ_DIRECTORY_CONTROL" ascii wide
        $file11 = "FILE_INFORMATION" ascii wide
        $file12 = "IoCompleteRequest" ascii wide
        $file13 = "ZwOpenFile" ascii wide
        $file14 = "ZwCreateFile" ascii wide
        
        // File structure manipulation
        $struct1 = "FILE_DIRECTORY_INFORMATION" ascii wide
        $struct2 = "FILE_BOTH_DIR_INFORMATION" ascii wide
        $struct3 = "FILE_FULL_DIR_INFORMATION" ascii wide
        $struct4 = "FILE_ID_BOTH_DIR_INFORMATION" ascii wide
        $struct5 = "FILE_ID_FULL_DIR_INFORMATION" ascii wide
        $struct6 = "FILE_NAMES_INFORMATION" ascii wide
        $struct7 = "WIN32_FIND_DATA" ascii wide
        $struct8 = "NextEntryOffset" ascii wide
        $struct9 = "FileName" ascii wide
        $struct10 = "FileNameLength" ascii wide
        $struct11 = "cFileName" ascii wide
        $struct12 = "FILE_OBJECT" ascii wide
        $struct13 = "UNICODE_STRING" ascii wide
        $struct14 = "Buffer" ascii wide
        
        // Filtering and file hiding
        $hide1 = "fileName" nocase ascii wide
        $hide2 = "FilePath" nocase ascii wide
        $hide3 = "Hidden" nocase ascii wide
        $hide4 = "Stealth" nocase ascii wide
        $hide5 = "Invisible" nocase ascii wide
        $hide6 = "File extension" nocase ascii wide
        $hide7 = ".sys" nocase ascii wide
        $hide8 = ".dll" nocase ascii wide
        $hide9 = ".exe" nocase ascii wide
        $hide10 = "FileInformation" nocase ascii wide
        $hide11 = "FileAttributes" nocase ascii wide
        $hide12 = "FILE_ATTRIBUTE_HIDDEN" ascii wide
        $hide13 = "FileSystemControl" nocase ascii wide
        $hide14 = "filter" nocase ascii wide

    condition:
        (
            (3 of ($file*) and 2 of ($struct*)) or
            (2 of ($file*) and 3 of ($struct*)) or
            (2 of ($file*) and 2 of ($struct*) and 2 of ($hide*)) or
            (1 of ($file*) and 2 of ($struct*) and 3 of ($hide*))
        )
}

rule Rootkit_Registry_Manipulation {
    meta:
        description = "Detects registry manipulation techniques used by rootkits"
        author = "Security Team"
        severity = "critical"
        date = "2023-10-15"
    
    strings:
        // Registry APIs
        $reg1 = "NtQueryKey" ascii wide
        $reg2 = "ZwQueryKey" ascii wide
        $reg3 = "NtEnumerateKey" ascii wide
        $reg4 = "ZwEnumerateKey" ascii wide
        $reg5 = "NtEnumerateValueKey" ascii wide
        $reg6 = "ZwEnumerateValueKey" ascii wide
        $reg7 = "RegEnumKey" ascii wide
        $reg8 = "RegEnumValue" ascii wide
        $reg9 = "RegQueryValue" ascii wide
        $reg10 = "RegOpenKey" ascii wide
        $reg11 = "RegCreateKey" ascii wide
        $reg12 = "RegDeleteKey" ascii wide
        $reg13 = "RegSetValue" ascii wide
        $reg14 = "RegGetValue" ascii wide
        
        // Registry structures
        $struct1 = "KEY_INFORMATION" ascii wide
        $struct2 = "KEY_VALUE_INFORMATION" ascii wide
        $struct3 = "HKEY" ascii wide
        $struct4 = "HKEY_LOCAL_MACHINE" ascii wide
        $struct5 = "HKLM" ascii wide
        $struct6 = "HKEY_CURRENT_USER" ascii wide
        $struct7 = "HKCU" ascii wide
        $struct8 = "KEY_BASIC_INFORMATION" ascii wide
        $struct9 = "KEY_NODE_INFORMATION" ascii wide
        $struct10 = "KEY_FULL_INFORMATION" ascii wide
        $struct11 = "KEY_NAME_INFORMATION" ascii wide
        $struct12 = "KEY_VALUE_BASIC_INFORMATION" ascii wide
        $struct13 = "KEY_VALUE_FULL_INFORMATION" ascii wide
        $struct14 = "KEY_VALUE_PARTIAL_INFORMATION" ascii wide
        
        // Registry keys of interest
        $key1 = "\\Registry\\Machine\\System\\CurrentControlSet\\Services" ascii wide
        $key2 = "\\Registry\\Machine\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" ascii wide
        $key3 = "\\CurrentControlSet\\Services" ascii wide
        $key4 = "\\CurrentVersion\\Run" ascii wide
        $key5 = "SYSTEM\\CurrentControlSet\\Services" ascii wide
        $key6 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" ascii wide
        $key7 = "SYSTEM\\CurrentControlSet\\Control" ascii wide
        $key8 = "SafeBoot" ascii wide
        $key9 = "ImagePath" ascii wide
        $key10 = "DisplayName" ascii wide
        $key11 = "DriverName" ascii wide
        $key12 = "Type" ascii wide
        $key13 = "Start" ascii wide
        $key14 = "ObjectName" ascii wide

    condition:
        (
            (3 of ($reg*) and 2 of ($struct*)) or
            (2 of ($reg*) and 3 of ($struct*)) or
            (2 of ($reg*) and 2 of ($struct*) and 2 of ($key*)) or
            (2 of ($reg*) and 1 of ($struct*) and 3 of ($key*)) or
            (1 of ($reg*) and 2 of ($struct*) and 3 of ($key*))
        )
}

rule Rootkit_Network_Hiding {
    meta:
        description = "Detects network hiding techniques used by rootkits"
        author = "Security Team"
        severity = "critical"
        date = "2023-10-15"
    
    strings:
        // Network enumeration APIs
        $net1 = "GetTcpTable" ascii wide
        $net2 = "GetUdpTable" ascii wide
        $net3 = "GetExtendedTcpTable" ascii wide
        $net4 = "GetExtendedUdpTable" ascii wide
        $net5 = "GetTcpStatistics" ascii wide
        $net6 = "GetUdpStatistics" ascii wide
        $net7 = "AllocateAndGetTcpExTableFromStack" ascii wide
        $net8 = "AllocateAndGetUdpExTableFromStack" ascii wide
        $net9 = "GetIpNetTable" ascii wide
        $net10 = "GetAdaptersInfo" ascii wide
        $net11 = "GetAdaptersAddresses" ascii wide
        $net12 = "WSAIoctl" ascii wide
        $net13 = "SIO_GET_INTERFACE_LIST" ascii wide
        $net14 = "GetIfTable" ascii wide
        
        // Network structures
        $struct1 = "MIB_TCPTABLE" ascii wide
        $struct2 = "MIB_UDPTABLE" ascii wide
        $struct3 = "MIB_TCPROW" ascii wide
        $struct4 = "MIB_UDPROW" ascii wide
        $struct5 = "MIB_TCPTABLE_OWNER_PID" ascii wide
        $struct6 = "MIB_UDPTABLE_OWNER_PID" ascii wide
        $struct7 = "MIB_TCPROW_OWNER_PID" ascii wide
        $struct8 = "MIB_UDPROW_OWNER_PID" ascii wide
        $struct9 = "MIB_IPNETTABLE" ascii wide
        $struct10 = "MIB_IPNETROW" ascii wide
        $struct11 = "IP_ADAPTER_INFO" ascii wide
        $struct12 = "IP_ADAPTER_ADDRESSES" ascii wide
        $struct13 = "SOCKET_ADDRESS" ascii wide
        $struct14 = "sockaddr" ascii wide
        
        // Network filtering code
        $filter1 = "dwLocalPort" ascii wide
        $filter2 = "dwRemotePort" ascii wide
        $filter3 = "dwLocalAddr" ascii wide
        $filter4 = "dwRemoteAddr" ascii wide
        $filter5 = "LocalPort" ascii wide
        $filter6 = "RemotePort" ascii wide
        $filter7 = "LocalAddr" ascii wide
        $filter8 = "RemoteAddr" ascii wide
        $filter9 = "inet_addr" ascii wide
        $filter10 = "htons" ascii wide
        $filter11 = "ntohs" ascii wide
        $filter12 = "127.0.0.1" ascii wide
        $filter13 = "0.0.0.0" ascii wide
        $filter14 = "INADDR_ANY" ascii wide

    condition:
        (
            (3 of ($net*) and 2 of ($struct*)) or
            (2 of ($net*) and 3 of ($struct*)) or
            (2 of ($net*) and 2 of ($struct*) and 2 of ($filter*)) or
            (1 of ($net*) and 2 of ($struct*) and 3 of ($filter*)) or
            (2 of ($net*) and 1 of ($struct*) and 3 of ($filter*))
        )
} 