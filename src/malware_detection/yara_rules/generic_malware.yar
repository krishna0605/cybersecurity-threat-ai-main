/*
 * Generic Malware Detection Rules
 * These rules focus on detecting malicious patterns that can exist in various file types
 */

rule Suspicious_Base64_Executables {
    meta:
        description = "Detects base64 encoded executable content"
        author = "Security Team"
        severity = "medium"
        date = "2023-10-15"
    
    strings:
        // Base64 encoded DOS header (MZ)
        $b64_mz1 = "TVpQ" // TVpQ = MZP
        $b64_mz2 = "TVp6" // TVp6 = MZz
        $b64_mz3 = "TVqQ" // TVqQ = MjP
        $b64_mz4 = "TVro" // TVro = MZn
        $b64_mz5 = "TVqA" // TVqA = MjA
        
        // Base64 encoded PE header signatures
        $b64_pe1 = "UEVa" // UEV = PE
        $b64_pe2 = "UEUw" 
        
        // Base64 encoded shell commands
        $b64_cmd1 = "Y21kLmV4ZQ" // cmd.exe
        $b64_cmd2 = "cG93ZXJzaGVsbC5leGU" // powershell.exe
        $b64_cmd3 = "cG93ZXJzaGVsbCA" // powershell
        $b64_cmd4 = "Y21kIA" // cmd 
        $b64_cmd5 = "L2MgcG93ZXJzaGVsbA" // /c powershell
        
        // Common base64 artifacts
        $b64_artifact1 = "==" base64
        $b64_artifact2 = "=" base64wide
        
    condition:
        filesize < 5MB and
        (
            (1 of ($b64_mz*) and 1 of ($b64_pe*)) or
            (1 of ($b64_mz*) and 1 of ($b64_cmd*)) or
            (1 of ($b64_cmd*) and any of them in (filesize-2KB..filesize)) or
            (2 of ($b64_cmd*)) or
            (
                (1 of ($b64_mz*) or 1 of ($b64_pe*)) and 
                1 of ($b64_artifact*) and 
                filesize > 10KB
            )
        )
}

rule Suspicious_Obfuscation_Techniques {
    meta:
        description = "Detects common code obfuscation techniques"
        author = "Security Team"
        severity = "medium"
        date = "2023-10-15"
    
    strings:
        // String manipulation
        $str_manip1 = "String.fromCharCode" nocase
        $str_manip2 = "unescape" nocase
        $str_manip3 = "decodeURIComponent" nocase
        $str_manip4 = "atob" nocase
        $str_manip5 = "eval(" nocase
        $str_manip6 = "replace(" nocase fullword
        $str_manip7 = "charCodeAt" nocase fullword
        
        // Heavy obfuscation artifacts
        $heavy_obs1 = /[\w\W]{100,}=[\w\W]{100,}/
        $heavy_obs2 = /[\(\)]{20}/
        $heavy_obs3 = /eval\(\w+\([\w\W]{20,}\)\)/
        $heavy_obs4 = /\\x[0-9a-f]{2}\\x[0-9a-f]{2}\\x[0-9a-f]{2}\\x[0-9a-f]{2}\\x[0-9a-f]{2}/
        
        // Common obfuscation function calls
        $obs_func1 = /function\s+[a-zA-Z0-9_]{1,3}\s*\([a-zA-Z0-9_]{1,3}\)\s*\{[\w\W]{0,50}return/
        $obs_func2 = /var\s+[a-zA-Z0-9_]{1,3}\s*=\s*\[[^\]]{20,}\]/
        $obs_func3 = /for\s*\([a-zA-Z0-9_]{1,3}=0;\s*[a-zA-Z0-9_]{1,3}<[\w\W]{1,50};\s*[a-zA-Z0-9_]{1,3}\+\+\)\s*\{/

    condition:
        (
            (3 of ($str_manip*)) or
            (1 of ($heavy_obs*) and 1 of ($str_manip*)) or
            (2 of ($obs_func*)) or
            (1 of ($obs_func*) and 2 of ($str_manip*))
        )
}

rule Suspicious_Network_Activity {
    meta:
        description = "Detects suspicious network related indicators"
        author = "Security Team"
        severity = "medium"
        date = "2023-10-15"
    
    strings:
        // Connection strings
        $conn1 = "http://" nocase
        $conn2 = "https://" nocase
        $conn3 = "ws://" nocase
        $conn4 = "wss://" nocase
        $conn5 = "ftp://" nocase
        $conn6 = "tcp://" nocase
        
        // Suspicious domains/TLDs
        $sus_domain1 = /.+\.(xyz|top|club|online|site|fun|icu|vip|pw|cc|cn|ru|tk)/ nocase
        $sus_domain2 = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[0-9]{2,5}/
        $sus_domain3 = /\.onion/ nocase
        
        // HTTP related
        $http1 = "User-Agent:" nocase
        $http2 = "Content-Type:" nocase
        $http3 = "Mozilla/5.0" nocase
        $http4 = "POST" nocase fullword
        $http5 = "GET" nocase fullword
        
        // Network objects/functions
        $net_obj1 = "XMLHTTP" nocase
        $net_obj2 = "WinHttp" nocase
        $net_obj3 = "WebRequest" nocase
        $net_obj4 = "InternetOpen" nocase
        $net_obj5 = "socket(" nocase
        $net_obj6 = "connect(" nocase
        $net_obj7 = "recv(" nocase
        $net_obj8 = "send(" nocase
        $net_obj9 = "WSAStartup" nocase

    condition:
        (
            (2 of ($conn*) and 1 of ($sus_domain*)) or
            (1 of ($sus_domain*) and 2 of ($http*)) or
            (1 of ($sus_domain*) and 2 of ($net_obj*)) or
            (2 of ($conn*) and 2 of ($net_obj*) and filesize < 1MB) or
            (3 of ($net_obj*) and 1 of ($http*))
        )
}

rule Crypto_Mining_Indicators {
    meta:
        description = "Detects cryptocurrency mining related code"
        author = "Security Team"
        severity = "medium"
        date = "2023-10-15"
    
    strings:
        // Wallet addresses
        $wallet1 = /4[0-9AB][123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{93}/
        $wallet2 = /[13][a-km-zA-HJ-NP-Z1-9]{25,34}/
        $wallet3 = /0x[a-fA-F0-9]{40}/
        
        // Mining pools
        $pool1 = "stratum+tcp://" nocase
        $pool2 = "pool.minexmr.com" nocase
        $pool3 = "xmrpool" nocase
        $pool4 = "supportxmr" nocase
        $pool5 = "dwarfpool" nocase
        $pool6 = "nanopool" nocase
        $pool7 = "nicehash" nocase
        $pool8 = "minergate" nocase
        $pool9 = "antpool" nocase
        $pool10 = "slushpool" nocase
        
        // Mining terms
        $term1 = "hashrate" nocase
        $term2 = "cryptonight" nocase
        $term3 = "stratum" nocase
        $term4 = "ethash" nocase
        $term5 = "equihash" nocase
        $term6 = "lyra2z" nocase
        $term7 = "cuckaroo" nocase

    condition:
        (
            (1 of ($wallet*)) or
            (1 of ($pool*) and 1 of ($term*)) or
            (3 of ($pool*)) or
            (3 of ($term*))
        )
}

rule Windows_Shellcode_Patterns {
    meta:
        description = "Detects common shellcode patterns for Windows"
        author = "Security Team"
        severity = "high"
        date = "2023-10-15"
    
    strings:
        // Common shellcode starters
        $start1 = { fc e8 ?? ?? ?? ?? }  // Clear direction flag and call next instruction
        $start2 = { 31 c0 50 68 }        // xor eax, eax / push eax / push ...
        $start3 = { 68 ?? ?? ?? ?? 58 }  // push addr / pop eax
        $start4 = { e9 ?? ?? ?? ?? }     // jmp far
        $start5 = { eb ?? ?? ?? ?? ?? }  // jmp short
        
        // API resolution
        $api1 = { 54 68 72 65 61 64 }    // "Thread"
        $api2 = { 56 69 72 74 75 61 6c }  // "Virtual"
        $api3 = { 52 65 67 69 73 74 72 }  // "Registr"
        $api4 = { 55 73 65 72 33 32 }     // "User32"
        $api5 = { 57 53 32 5f 33 32 }     // "WS2_32"
        
        // Shellcode gadgets
        $gadget1 = { 5? 5? 5? 5? c3 }     // Multiple pops followed by ret
        $gadget2 = { 8b ?? 89 ?? ?? 89 }  // Register manipulation sequence
        $gadget3 = { 03 ?? ?? ?? 83 }     // Add, then compare
        $gadget4 = { 83 c? ?? 83 e? ?? }  // Add immediate, logical operation

    condition:
        filesize < 1MB and (
            (1 of ($start*) and 1 of ($api*)) or
            (1 of ($start*) and 1 of ($gadget*)) or
            (2 of ($api*) and 1 of ($gadget*)) or
            (2 of ($gadget*) and filesize < 20KB)
        )
} 